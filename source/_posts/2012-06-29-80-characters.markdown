---
author: admin
comments: false
date: 2012-06-29 17:05:27+00:00
layout: post
published: false
slug: 80-characters
title: 80个字符？
wordpress_id: 408
categories:
- 默认
---

到底代码应该对齐到对多少个字符？"80个字符，绝对的！”

绝对吗？



* * *



_[Linux 内核代码风格](http://www.kernel.org/doc/Documentation/CodingStyle)_


> "……长于80字符的行应该拆分为多行，拆出的行要短于上一行并放置在右侧……”
“例外：如果能够明显的提高可读性并且不会造成维护上的问题，那么超过80个 字符也是可以接受的。”


_[Google C++ 代码风格](http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml?showone=Line_Length#Line_Length)_


> “每行代码最多80个字符” “……这是条富有争议的规则，但是很多现存代码都遵照这个规则，而我们认为 保持一致(对可读性来说)是很重要的”
"优点：……很多人同时打开好几个代码窗口，根本没有多余空间拉伸窗口…… 80列是传统标准，为什么要改变？"
“缺点：……更宽的代码更加易于阅读，并且80列是上世纪60年代大型机的传统，而更宽的现代显示器，完全可以放得下多一点的字符”


_代码大全_


> “一条常见但有点过时的规则，就是语句长度应限制在80个字符内……”
“有了大显示器，窄字体以及横向打印模式，80个字符的长度现在显得武断了…”






* * *



世间绝对不能说的就是“绝对”。即使是公认的优秀标准，仍然规定了例外情况。

代码归根结底是给人看的，而代码风格最核心的目的是为了可读性和可维护性，所有一切一切的标准理应围绕这些最高准则来制定。


> “Linux是优秀的开源项目，Google的名头响亮，我们理应学习，所以一行代码 绝不应该超过80个字符。一旦超过，即使是单行的数据项的说明注释，也应该拆分成不超过80字符的多行。”


且不说我们应不应该全盘接受这些规定，即使接受也应该做到全面理解而非偏执一念，遵循理论的同时也考虑现实意义。偏执的80个字符限定，更加类似于某种宗教情结，而非现实的代码质量保证手段。

况且，代码质量绝不是来自于某一个特定方面，限制了行宽并不就会给你带来优秀的代码。反过来，如果因为死板的行宽限制而被迫采用某些奇特的缩写构造变量名/函数名，对可读性和可维护性造成的损害可比突破80个字符大的多。

鉴于目前优秀的硬件条件，宽屏的显示器，23/24的屏幕尺寸，尤其是对于Visual Studio用户来说，80个字符的宽度限制简直算得上暴殄天物，空白的右侧空间难道要贴上女朋友的照片？

出于可读和调试的考虑，100-120个字符的行宽在目前的硬件条件下是可行的。如果团队大多数使用VIM/Emacs的话，可以考虑统一要求为100，Visual Studio环境下，120个字符也是可以接受的。跟大多数团队标准一样，代码风格属于“行政事务”，尽量做到合理、统一、强制遵守即可。

PS：写完觉得，其实完全没必要写这么一篇东西，重要程度太低，《代码大全》谈语句布局的31.5节也只花了一小段简单带过。不过，写也写了，凑合看看。
